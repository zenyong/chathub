{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","style","display","justifyContent","height","width","backgroundColor","flexDirection","alignItems","src","margin","fontSize","color","fontWeight","textAlign","lineHeight","className","onClick","provider","GoogleAuthProvider","signInWithPopup","GoogleOutlined","SignOut","currentUser","signOut","LogoutOutlined","ChatRoom","props","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","roomsRef","doc","currentRoom","useState","formValue","setFormValue","useEffect","current","scrollIntoView","sendMessage","e","a","preventDefault","uid","photoURL","displayName","time","String","moment","format","add","text","createdAt","FieldValue","serverTimestamp","roomName","update","LastMessage","LastMessageSender","LastMessageTime","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","SendOutlined","messageClass","alt","size","App","useAuthState","user","bool","setBool","setCurrentRoom","list","ChatList","rooms","get","then","res","push","data","searchValue","setSearchValue","createNewRoom","flag","i","length","toUpperCase","set","createdBy","createdOn","alert","joined","arrayUnion","merge","console","log","borderRadius","paddingRight","boxShadow","marginTop","border","textTransform","SearchOutlined","search","padding","room","borderLeft","background","marginBottom","paddingLeft","marginRight","toLowerCase","flex","toDate","toISOString","fromNow","slice","Joined","checkTfJoined","setCheckIfJoined","changeVisible","prev","where","forEach","docu","one","addTo","removeFrom","arrayRemove","ArrowLeftOutlined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9530c736.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport './App.css';\nimport moment from 'moment';\nimport {\n  ArrowLeftOutlined,\n  SearchOutlined,\n  LogoutOutlined,\n  GoogleOutlined,\n  SendOutlined\n} from '@ant-design/icons'\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBOdfX_-WBub3AIHChW_Qh9aK6J0bLsung\",\n  authDomain: \"chatbud-80653.firebaseapp.com\",\n  projectId: \"chatbud-80653\",\n  storageBucket: \"chatbud-80653.appspot.com\",\n  messagingSenderId: \"319960267783\",\n  appId: \"1:319960267783:web:d59f1e81f4975140803ea2\"\n})\n\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n  const [bool, setBool] = useState(false);\n  const [currentRoom, setCurrentRoom] = useState(\"\");\n  let list = [];\n\n\n\n  function ChatList() {\n    const { uid, displayName } = auth.currentUser;\n    const roomsRef = firestore.collection('allRooms');\n    const [rooms] = useCollectionData(roomsRef, { idField: 'id' });\n    const joinedRef = firestore.collection('joined');\n    joinedRef.doc(uid).get().then(res => {\n      list = [];\n      list.push(res.data())\n    })\n    const [formValue, setFormValue] = useState('');\n    const [searchValue, setSearchValue] = useState('');\n    function search() {\n      let flag = false;\n      for (var i = 0; i < rooms.length; i++) {\n        if (rooms[i].roomName.toUpperCase() === searchValue.toUpperCase()) {\n          flag = true;\n        }\n      }\n      if (flag) {\n        setCurrentRoom(searchValue.toUpperCase())\n        setBool(true)\n      }\n      else {\n        alert(\"Room does not exist\")\n        setFormValue('');\n      }\n    }\n\n    const createNewRoom = async (e) => {\n      e.preventDefault();\n      let flag = true;\n      for (var i = 0; i < rooms.length; i++) {\n        if (rooms[i].roomName === formValue) {\n          flag = false;\n        }\n      }\n      flag ?\n        await roomsRef.doc(formValue.toUpperCase()).set({\n          uid,\n          roomName: formValue.toUpperCase(),\n          createdBy: displayName,\n          createdOn: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n        :\n        alert(\"Name already taken\")\n      flag ?\n        await firestore.collection('joined').doc(user.uid).set({\n          joined: firebase.firestore.FieldValue.arrayUnion(formValue.toUpperCase()),\n          uid: user.uid,\n        }, { merge: true }) : console.log(\"bad luck\")\n      setFormValue('');\n    }\n\n    return (<>\n      {(bool ? <ChatRoom currentRoom={currentRoom} setCurrentRoom={setCurrentRoom} /> :\n        <>\n          <main style={{ display: 'block' }}>\n            <div>\n              <div className=\"search\" style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', borderRadius: '30px', paddingRight: '20px', boxShadow: '0px 5px 20px #6b6b6b64', marginTop: '20px' }} >\n                <input value={searchValue} onChange={(e) => setSearchValue(e.target.value)} placeholder=\"Search room...\" style={{ width: '100vw', border: 'none', textTransform: 'capitalize' }} >\n                </input>\n                <SearchOutlined style={{ fontSize: '30px' }} onClick={() => { search() }} />\n              </div>\n              <div style={{ borderRadius: '20px', padding: '0 10px', marginTop: '20px' }}>\n                {list[0] ? <h2 style={{ color: \"#007AFF\", fontSize: \"20px\" }}>Joined rooms</h2> : <div />}\n                {rooms && rooms.map((room, i) => {\n                  let bool = false;\n                  if (list[0]) {\n                    for (let i = 0; i < list[0].joined.length; i++) {\n                      if (list[0].joined[i] === room.roomName) {\n                        bool = true;\n                      }\n                    }\n                  }\n                  return bool ? (\n                    <div key={i} style={{ display: \"flex\", alignItems: 'center', padding: '5px 0px', borderLeft: '4px solid #007AFF', background: '#007AFF12', marginBottom: '10px', paddingLeft: '5px', height: 'min-content' }} onClick={() => { setCurrentRoom(room.roomName); setBool(true) }}>\n                      <img src={'https://avatars.dicebear.com/api/identicon/' + room.roomName + '.svg?background=black&scale=70&'} alt=\"\" style={{ margin: '0', marginRight: '20px', height: '50px', width: '50px', borderRadius: '100%' }} />\n                      <div key={i} style={{ display: 'flex', flexDirection: 'column', width: '-webkit-fill-available' }}>\n                        <div style={{ display: 'flex' }}>\n                          <h1 style={{ textAlign: 'left', margin: '3px 0', textTransform: 'capitalize', fontSize: '20px', display: 'flex', alignItems: 'center' }}>\n                            {room.roomName.toLowerCase()}\n                          </h1>\n                          <div style={{ flex: '1' }} />\n                          <h1 style={{ textAlign: 'left', margin: '0px 10px', textTransform: 'capitalize', fontSize: '15px', display: 'flex', color: 'gray', alignItems: 'center' }}>\n                            {room.LastMessageSender ? moment(room.LastMessageTime.toDate().toISOString()).fromNow() : \"\"}\n                          </h1>\n                        </div>\n                        {room.LastMessageSender ?\n                          <h5 style={{ textAlign: 'left', margin: '0', color: 'gray', display: 'flex', flexDirection: 'column' }}>\n                            {room.LastMessageSender}: {room.LastMessage.slice(0, 10)}\n                          </h5>\n                          :\n                          <h4 style={{ textAlign: 'left', margin: '0', color: 'gray', display: 'flex' }}>\n                            No messages\n                          </h4>\n                        }\n                      </div>\n                    </div>\n                  )\n                    :\n                    <div />\n                })}\n              </div>\n            </div>\n          </main>\n          <form onSubmit={createNewRoom} style={{ width: '70vw' }}>\n            <div className=\"message_box\">\n              <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Room name...\" style={{ width: '40vw' }} />\n              <button type=\"submit\" disabled={!formValue} className=\"sendbtn\">Add</button>\n            </div>\n          </form>\n        </>\n      )\n      }\n    </>)\n  }\n  const Joined = () => {\n    const [checkTfJoined, setCheckIfJoined] = useState(false);\n    firestore.collection('joined').where('uid', '==', user.uid).get().then(doc => {\n      doc.forEach(docu => {\n        docu.data().joined.map((one) => {\n          if (one === currentRoom) {\n            setCheckIfJoined(true)\n          }\n        })\n      });\n    })\n    function changeVisible() {\n      setCheckIfJoined(prev => !prev)\n    }\n    const addTo = async () => {\n      await firestore.collection('joined').doc(user.uid).set({\n        joined: firebase.firestore.FieldValue.arrayUnion(currentRoom),\n        uid: user.uid,\n      }, { merge: true })\n      changeVisible()\n    }\n    const removeFrom = async () => {\n      await firestore.collection('joined').doc(user.uid).update({\n        joined: firebase.firestore.FieldValue.arrayRemove(currentRoom),\n      });\n      changeVisible()\n    }\n    return (\n      (checkTfJoined\n        ?\n        <div style={{ border: '1px solid #007AFF', borderRadius: '10px', padding: '5px 5px', marginRight: '5px' }}><h6 style={{ color: '#007AFF', fontSize: '15px', margin: '0' }} onClick={() => removeFrom()}>Joined</h6></div>\n        :\n        <div style={{ border: '1px solid #007AFF', borderRadius: '10px', padding: '5px 5px', marginRight: '5px' }}><h6 style={{ color: '#007AFF', fontSize: '15px', margin: '0' }} onClick={() => addTo()}>Join</h6></div>\n      )\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      {(bool ?\n        <>\n          <header>\n            <h1 style={{ margin: '0px', fontSize: '20px' }}>\n              <p style={{ display: 'flex' }}>\n                <font color=\"#007AFF\" style={{ display: 'flex', alignItems: 'center', textTransform: 'capitalize' }}>\n                  <ArrowLeftOutlined style={{ fontSize: '30px' }} onClick={() => { setBool(prev => !prev) }} />\n                  <img src={'https://avatars.dicebear.com/api/identicon/' + currentRoom + '.svg?background=black&scale=70&'} alt=\"\" style={{ margin: '0px 5px' }} />\n                  {currentRoom.toLowerCase()}\n                </font>\n              </p>\n            </h1>\n            <Joined />\n          </header>\n        </>\n        :\n        <header style={{ background: '#007bff00' }}>\n          <h1 style={{ margin: '0px', fontSize: '25px' }}>\n            <font color=\"#007AFF\">\n              Chatbud\n            </font>\n          </h1>\n          <SignOut />\n        </header>\n      )}\n      <section>\n        {user ? <><ChatList currentRoom={currentRoom} setCurrentRoom={setCurrentRoom} /> </> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <div style={{ display: 'flex', justifyContent: 'center', height: '100vh', width: '100vw', backgroundColor: '' }}>\n        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n          <img src={'https://i.pinimg.com/564x/00/7e/28/007e285cbf44017f5bc63cce986dddda.jpg'} style={{ height: '300px', width: '300px', margin: '0' }} />\n          <h1 style={{ fontSize: '2rem', color: 'white', width: '100vw', fontWeight: '1000', margin: '0', color: '#007AFF' }}>Imagine a place...</h1>\n          <h2 style={{ fontSize: '1rem', width: '95vw', height: 'min-content', color: '#007AFF', textAlign: 'center', lineHeight: '1.5rem', margin: '0' }}>...where you can belong to a school club, a gaming group, or a worldwide art community. A place that makes it easy to talk every day and hang out more often.</h2>\n        </div>\n        <button className=\"sign-in\" onClick={signInWithGoogle}> <GoogleOutlined /> Sign in with Google</button>\n      </div>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}><LogoutOutlined style={{ fontSize: '28px' }} /></button>\n  )\n}\n\nfunction ChatRoom(props) {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(250);\n  const [messages] = useCollectionData(query, { idField: 'id' });\n  const roomsRef = firestore.collection('allRooms').doc(props.currentRoom);\n  const [formValue, setFormValue] = useState('');\n\n  useEffect(() => {\n    dummy.current.scrollIntoView();\n  }, [messages], firestore.collection('allRooms'))\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    const { uid, photoURL, displayName } = auth.currentUser;\n    const time = String(moment().format(\"h:mm a\"))\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      displayName,\n      roomName: props.currentRoom,\n      time: time\n    })\n    await roomsRef.update({\n      LastMessage: formValue,\n      LastMessageSender: displayName,\n      LastMessageTime: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => (msg.roomName === props.currentRoom ? <ChatMessage key={msg.id} message={msg} /> : <div />))}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage} >\n      <div className=\"message_box\">\n        <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Message...\" />\n\n        <button type=\"submit\" disabled={!formValue} className=\"sendbtn\"><SendOutlined style={{ fontSize: '25px' }} /></button>\n      </div>\n    </form>\n  </>)\n}\n\n\nfunction ChatMessage(props) {\n  const { text, uid, displayName, createdAt, time } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img className={messageClass} src={'https://avatars.dicebear.com/api/miniavs/' + uid + '.svg'} alt=\"\" />\n      <p className=\"messageText\">\n        <span>\n          <font size='1' color=\"#007AFF\" className=\"username\" className={`username${messageClass}`}>\n            {displayName}\n          </font>\n        </span>\n        {text}\n        <span style={{ width: '100%', textAlign: 'end', lineHeight: '9px' }}>\n          <font size='1' color=\"gray\" style={{ textAlign: 'right' }}>\n            {time}\n          </font>\n        </span>\n      </p>\n    </div>\n\n  </>)\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}